养成良好的习惯
    备份
    备份的好处.
    ◆ 可以还原
    建议备份的格式: 文件名.用户名.日期
    ◆ 可以用来对比,修改了哪些地方
    # diff  文件名   备份文件名    //查看文件和备份文件的差别
    # vimdiff    文件名  备份文件名        //在vim中显示两个文件的差异之处
    # tree a   //查看目录结构
    
    知识点拓展: 创建连续的文件 如 1.txt 2.txt 3.txt ......
    
    往一个txt文件里追加内容
    1) # echo "内容" >> txt文件
    2) # cat >> 文件绝对路径 << EOF 内容 内容 内容 内容 内容 内容 内容 内容 内容 EOF //就是把两个EOF之间的内容追加到txt文件内的内容尾,优势:可以同时追加多行.
    # for f in `seq 1000`;do touch $f.txt;done    //按序列创建1.txt ~ 1000.txt

        
    
移动命令:
# mv [-ifu] [源文件/源目录] [目标目录]
    -i 如果目标文件已经存在,询问是否覆盖
    -f 强制执行,不会询问
    -u 若目标文件已经存在,则比较文件新旧,才会移动
# rmdir 目录名/    //删除空目录

让test里显示除了oldboy外的其他内容.

Linux 三剑客
awk sed grep
这三个命令都可以直接接文件, 不是必须接在管道符后面

grep
# grep -v oldboy test.txt    //从test.txt里过滤掉oldboy(oldboy不显示,其他内容正常显示)

sed 
# sed -e '/oldboy/d' /tmp/test.txt    //从/tmp/test.txt里过滤掉oldboy(不显示,但其他内容正常显示)
# sed -n /oldboy/p /tmp/test.txt        //取消默认输出,打印包含oldboy的语句,相当于 grep oldboy /tmp/test.txt
# sed -n /[^oldboy]/p test.txt        //正则表达式,从/tmp/test.txt 里过滤掉oldboy, 显示其他内容

awk
# awk /[^oldboy]/ test.txt    //从/tmp/test.txt 里过滤掉oldboy, 显示其他内容

用/mnt/test.txt 覆盖掉/tmp/test,且不提示覆盖(mv 和cp 都可以)
1) # \cp -f /mnt/test.txt /tmp/test.txt    //在命令前面加上反斜线'\'
2) # /bin/cp -f /mnt/test.txt /tmp/test.txt    //用命令的全路径

只查看 ett.txt 文件内第20行到第30行的内容
# seq 100     //生成序列数字1-100
# seq 100 >ett.txt    // 在ett.txt内写入1-100的数字
方法1). # head -30 ett.txt|tail -11
方法2). # sed  -n '20,30p' ett.txt    //取消默认输出(默认输出1-100),显示20-30行,p是print
方法3). # awk '{if(NR>19 && NR<31) print $1}' ett.txt    //打印20-30行, NR是行号
sed 命令


         

// seq 是竖着排列,{a..z}是横着排列

find 并删除
[root@localhost tmp]# find /tmp -inum 524313 -ok rm {} \;    //-ok 可换成 -exec,-ok会在执行前询问
< rm ... /tmp/test > ? n       
[root@localhost tmp]# man find
[root@localhost tmp]# find /tmp -inum 524313 |xargs rm    //xargs 功能和-exec一样
[root@localhost tmp]# ls
a.txt    services                                  yum_save_tx-2016-07-05-02-16QQh1jE.yumtx
ett.txt  yum_save_tx-2016-07-05-02-16nylnZA.yumtx

[root@localhost tmp]# seq -s " " 20 30      //打印,序列20-30.数字之间用" " 中间部分间隔
20 21 22 23 24 25 26 27 28 29 30
[root@localhost tmp]#  seq -s "$" 20 30    //-s " "表示指明序列之间的间隔符号
20$21$22$23$24$25$26$27$28$29$30
[root@localhost tmp]# touch `seq -s " " 20 30`        //创建20 -30 序列文件,` `(反引号,键盘上的~键)中间可以插入命令
[root@localhost tmp]# ls
20  22  24  26  28  30     ett.txt   yum_save_tx-2016-07-05-02-16nylnZA.yumtx
21  23  25  27  29  a.txt  services  yum_save_tx-2016-07-05-02-16QQh1jE.yumtx

cat的常用功能





反选查找,就是排除a.log
[root@localhost ~]# find /tmp -type f ! -name 'a.log' -exec ls -l {} \;
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/24
-rw-------. 1 root root 209 7月   5 02:16 /tmp/yum_save_tx-2016-07-05-02-16nylnZA.yumtx
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/21
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/28
-rw-r--r--. 1 root root 641020 7月   5 08:46 /tmp/services
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/20
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/23
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/29
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/27
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/26
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/30
-rw-r--r--. 1 root root 12288 7月   1 12:59 /tmp/.test.swp
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/22
-rw-r--r--. 1 root root 0 7月   6 08:00 /tmp/25
-rw-r--r--. 1 root root 24576 7月   5 08:46 /tmp/.services.swp
-rw-------. 1 root root 209 7月   5 02:16 /tmp/yum_save_tx-2016-07-05-02-16QQh1jE.yumtx
-rw-r--r--. 1 root root 134 7月   6 02:03 /tmp/a.txt
-rw-r--r--. 1 root root 292 7月   5 06:52 /tmp/ett.txt

# echo "123456"|passwd --stdin aphey && history -c    // 把aphey用户密码更改为123456,一般用于批量创建用户.
# LANG=zh_CN.UTF-8            //可以在操作界面切换语言, 中文为 zh_CN.UTF-8; 英文为EN
# yum grouplist     //可以查看安装的软件组

优化 Selinux
    1.关闭Selinux
     ⑴ # sed -i 's/SELINUX=enforcing/SELINUX=disabled' /etc/selinux/config
     ⑵ # vi /etc/selinux/config    //手动修改
        SELINUX=disabled    
     ⑶ # setenforce=0    //临时生效,一般在配置文件里先改了,然后再到
        # getenforce        //查看selinux当前状态
    
    2.设定运行级别runlevel
    # runlevel    //查看运行级别
    
    3.精简开机系统启动的服务
    命令的处理方法
        A) # ntsysv
        B) # setup-system service   
        C) 通过脚本一键完成 
           操作命令
# LANG=en    //切换语言
# for oldboy in `chkconfig --list|grep 3:on|awk '{print $1}'`;do chkconfig --level 3 $oldboy off;done
for oldboy in crond network syslog sshd; do chkconfig --level 3 $oldboy on;done
chkconfig --list|grep 3:on

    4.关闭iptables防火墙                
    
更改ssh登录标准
windows user : administrator    guest    Port:3389
Linux user; root 很多普通用户    port:22
所以我们要改掉默认的用户和端口.
# cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bak    //先备份sshd配置文件
# vi sshd_config    //编辑sshd_config,常规我们纸修改下面四项 
######by oldboy#2016-07-11####
Port 52113    //→ssh连接默认的端口,所有人都知道,必须要改
PermitRootLogin no    //→root用户黑客都知道,禁止它远程登录,但是可以先用普通用户登录后再换root用户
PermitEmptyPasswords no    //→禁止空密码登录
UseDNS no    //→不使用DNS
######by oldboy#2016-07-11####  
# /etc/init.d/sshd restart    //→ 修改完配置文件后需要重启相关服务

# lsof -i :52113    //只知道端口,可以反查相关服务

然后从windows上用远程工具连接linux,发现连接不上
我们在windowsn上ping linuxIP, 发现可以ping通,说明网络线路是通的
然后我们用 telnet linuxIp 52113 不通, 说明sshd服务是不通的.

那我们就要到linux那去确认
1) sshd服务是否启动,用lsof -i :52113 查询即可
2) 确认防火墙是否开启 /etc/init.d/iptables status

sudo 权限管理
# visudo (vi /etc/sudoers) 进行授权用户可以有怎样的权限,一般是root的某些权限或全部
比如 aphey用户无root密码 是走不了 su - root 这条路的,所以可以走 sudo 命令这条路,

# visudo (vi /etc/sudoers)
user    MACHINE=    COMMANDS
root    ALL=(ALL)    ALL
oldboy    ALL=(ALL)    /usr/sbin/useradd,/usr/sbin/userdel
用户 (or %用户组)      机器=(授权的角色)    /usr/sbin/useradd

修改字符集
# cat /etc/sysconfig/i18n    //查看字符集,linux对中文支持并不好,能不用中文,最好别用中文
# cp /etc/sysconfig/i18n /etc/sysconfig/i18n.bak    //备份
# echo 'LANG="zh_CN.UTF-8"' >/etc/sysconfi/i18n    //修改语言及字符集,也可以用vi 手动修改
# source /etc/sysconfig/i18n    //使该配置文件生效
# echo $LANG    //查看字符集,其实是一个环境变量


lrszs   是一款可以从windows何linux之间上传下载软件的工具
# sz     //从linux下载文件到windows
# rz    //从windows向 linux上传

sysstat 系统调优工具

CentOS DNS配置文件位置: /etc/resolv.conf
服务器时间同步:
1) 手动同步
# /usr/sbin/ntpdate time.nist.gov
2) 定时任务:
# echo '#time sync by oldbot at 2016-7-18'>>/var/spool/cron/root
echo '*/5****/usr/sbin/ntpdate time.nist.gov>/dev/null 2>&1' >>/var/spool/cron/root
                       time.ntp.org
时间服务器ntpserver同步原理

加大服务器文件描述符
# ulimit -n    //查看默认服务器文件描述符的上限

# vim /etc/security/limits.conf
末尾加上 *    -    nofile    65535
or # echo '*    -    nofile    65535'>>/etc/security/limits.conf

也有人把ulimit -SHn 65535 命令加入到/etc/rc.local,然后每次重启生效
cat>>/etc/rc.local<<EOF
#open files
ulimit -HSn 65535
# stack size
ulimit -s 65535
EOF
然后退出用户重新登录 即可生效

定时清理clientmqueue 目录垃圾文件放置沾满磁盘空间

/var/spool/clientmqueue/    sendmail邮件服务临时存放地点
手动清理方法
# find /var/spool/clientmqueue/ -type f |xargs rm -f
# ll /var/spool/clientmqueue|wc -l
定时清理方法:
# mkdir -p /server/scripts/
# echo "find /var/spool/clientmqueue/ -type f|xargs rm -f" >/server/scripts/dev_sys_file.sh
# cat /server/scripts/del_sys_file.sh
 find /var/spool/clientmqueue/ -type f|xargs rm -f
# echo "00 00 * * * /bin/sh /server/scripts/del_sys_files.sh >/dev/null 2>&1" >>/var/spool/cron/root

锁定关键系统文件
# chattr -i /etc/passwd
# chattr -i /etc/shadow
# chattr -i /etc/group
# chattr -i /etc/gshadow
# chattr -i /etc/inittab
然后再修改chattr名称
# mv /usr/bin/chattr /usr/bin/aphey    //自己要记得改成什么了
清空/etc/issue
开机会显示内核信息,我们可以清空/etc/issue 来隐藏这些信息
# >/etc/issue

一般分区方案:


考试

方法1) # ls -l| grep ^d    //正则表达式,长格式显示文件列表,并显示以d开头的^ 表示开头,如果^在[]里,表示 取反.
方法2) # ls -F| grep /$    // -F,表示在目录名称后面加/, grep /$,正则表达式里的.表示任一字符表示以/结尾.
        # ls -f |awl '/^d/'    //同方法1
        # ls -l|sed -n '/^d/p'    //,只显示以d开头的清单.
方法3) # tree -Ld 1    // -d 只显示目录, -L 显示深度. -L 1 只显示1级目录.


# cd -    //回到上一次的目录
# env    //显示环境变量

# ls -lrt /etc    //最新的文件会在最下面显示

# df -hiT    //可以查看挂载情况,i inode T 显示类型

# free -m 查看内存信息# cat/proc/meminfo

/etc/hosts   内网IP解析到域名, 作用很大,我们可以把公司开发项目通过域名来连接服务器,这样将来要是服务器迁移,我们就可以直接在新机器的/etc/hosts修改一下域名对应的ip即可

# hostname NEWNAME    把hostname改为NEWNAME, 临时生效,如果要永久生效 # vi /etc/sysconfig/network
还可以通过 #setup ==> dns配置来修改主机名,可以永久生效,在CentOS5里临时永久都生效

/etc/fstab 记录开机要挂在的文件系统的配置文件
/etc/exports 设定NFS网络文件系统用的配置文件
/etc/profile  系统全局环境变量配置路径    //修改完以后要用. /etc/profile 或者 source /etc/profile使它生效
还有一个目录也可以实现同样的功能 /etc/profile.d/;如果希望开机就执行一个程序,就可以在这里放着
[aphey@localhost ~]$ cd /etc/profile.d
[aphey@localhost profile.d]$ ls
colorls.csh  cvs.csh  glib2.csh  lang.csh  less.csh  qt.csh  vim.csh  which2.sh
colorls.sh   cvs.sh   glib2.sh   lang.sh   less.sh   qt.sh   vim.sh
[aphey@localhost profile.d]$ su -
密码：
[root@localhost ~]# cd /etc/profile.d/
[root@localhost profile.d]# echo "echo Aphey" > a.sh //写一个a.sh脚本,让开机就输出Aphey
[root@localhost profile.d]# chmod 700 a.sh
[root@localhost profile.d]# ./a.sh
Aphey
[root@localhost profile.d]# logout
[aphey@localhost profile.d]$ su -
密码：
Aphey
/etc/issue    显示系统版本和内核版本
/etc/motd     登录提醒    motd - message of the day
[root@localhost ~]# cat /etc/motd
[root@localhost ~]# echo "Stay away from my computer">/etc/motd
[root@localhost ~]#
[root@localhost ~]# cat /etc/motd
Stay away from my computer


/etc/redhat-release    显示REDHAT
# uname -r                        查看linux内核

/etc/passwd    用户账号信息
/etc/shadow    用户密码信息
/etc/group    用户组信息
/etc/gshadow    用户组密码信息
/etc/sudoers    sudo命令配置文件
/etc/securetty    设定那些终端可以让root登录
/etc/login.defs    所用用户登录时的缺省配置
/etc/modprobe.conf    内核模块额外参数设定
/etc/rsyslog.conf    日志设置文件
/etc/sysctl.conf    内核参数配置路径

/var/log/messages*    //日志信息,非常重要,按周自动轮循
/var/log/secure    //记录登录系统存取信息的文件,按周自动轮循,如 pop3,ssh,telnet,ftp都会记录在此
/var/spool/cron/root    定时任务crontab默认目录,按用户名命名的文件
/var/spool/mail    系统用户邮件存放目录
/var/spool/clientmqueue  临时邮件文件目录,有很多原因会导致这个目录碎文件很多,比如crontab定时任务命令不加>/dev/null 等.工作中偶尔会因该目录文件太多,导致/var分区inode数量被消耗尽,无法写入文件的情况.

/proc    虚拟目录,是内存的映射
/proc/version    内核版本
/proc/sys/kernel    系统内核功能
/proc/sys/net/ipv4    对应 /etc/sysctl.conf,前者临时生效,后者永久生效
/proc/cpuinfo    关于处理器的信息,如类型,厂家,型号和性能等
/proc/meminfo    系统内存信息
/proc/devices    当前运行内核所配置的所有设备清单
/proc/dma    当前正在使用的DMA通道
/proc/filesystems    当前运行内核所配置的文件系统
/proc/interrupts    正在使用的中断,和曾经有多少个中断
/proc/ioports    当前正在使用的I/O端口
/proc/loadavg    系统负载信息(系统繁忙情况,比较准确,但不够细致系统性能指标),# uptime的结果 //值不要超过CPU核数

PATH环境变量
# echo $PATH    //查看PATH变量, echo $变量名为查看变量

将/opt路径添加到PATH
# vi /etc/profile
在最下面添加
export PATH=/opt:$PATH //在现有的PATH前面添加新的PATH项/opt
# . /etc/profile( source /etc/profile)使之生效
我们在用户家目录也有环境变量 .bash_profile 和.bashrc里配置,只对对应用户生效

# file 文件名    //查看普通文件类型
find查找与时间有关的参数
-atime n    #n为数字,意思为在n天前被access过的档案
-ctime n    #n为数字,意思为在n天前被change过的档案
-mtime n    #n为数字,意思为在n天前被modify过的档案
-newer file    #file 为一个存在的档案,意思是说,只要档案比file 新的,就会被列出来

# tail -fF 文件名   //查看文件末尾10行的变化(f选项意思是当文件被删除后,新建一个同名文件,tail命令不会急需监控,-F表示,文件删除后,新建一个同名文件,tail会继续监控这个新建的同名文件)

# for n in seq `seq 1000`;do echo 111>>/var/log/messages;usleep 500;done
# cat -n 文件名    //查看文件的行号;nl 也可以;当然 vi 也可以;grep -n . 文件名也可以
Q: 要求sshd 只在运行级别三运行!
# chkconfig --level 245 sshd off    // 可以通过chkconfig --help查看帮助
还可以通过rc.local来配置
# echo "/etc/init.d/sshd start" >> /etc/rc.local
# tail -1 /etc/rc.local

开机启动流程:


tar的规范
打包最好先进入要打包目录的上层目录;比如我要打包/root/oldboy; 我就先 cd /root;再 tar zcvf oldboy.tar.gz ./oldboy.
如果打包需要保留原来的目录结构;可以用绝对路径(从根目录开始);然后解压的时候会显示路径

排除打包(排除欲打包目录里的文件,但排除某个文件);比如打包/root/oldboy';但是排除oldboy目录下的dscn0719.jpg
# tar zcvf oldboy.tar.gz /root/oldboy --exclude=oldboy/dscn0719.jpg
# tar abc.tar.gz -C /mnt/    //-C表示置顶目标路径要解压到/mnt/目录下,如果不加这个选项,就会解压到当前目录
# tar -tvf abc.tar.gz    //查看压缩包的内容
# tar -jc(x)vf abc.tar.bz   //(解)压缩打的是bz包

Q: 在/tmp下创建oldboy.txt,内容为I am oldboy my qq is 49000448;要求输出 oldboy和QQ号
[root@www ~]# cd /tmp
[root@www tmp]# echo 'I am oldboy my qq is 49000448' >>oldboy.txt
[root@www tmp]# cat oldboy.txt
I am oldboy my qq is 49000448
[root@www tmp]# cut -d" " -f 3,7 oldboy.txt  // -d" " 表示置顶空格为分割符, -f表示显示第几个字段
oldboy 49000448
*引申 cut -c
[root@www tmp]# cut -c 6-12,22- oldboy.txt        //-c 字符.-b 是字节
oldboy 49000448
//tail也有相似功能
[root@www tmp]# tail -c 9 oldboy.txt
49000448
// oldboy.txt内容改为I am oldboy,my qq is 49000448 要求用awk多分隔符的方法取出oldboy 和49000448
[root@www tmp]# awk -F '[ ,]' '{print $3}' oldboy.txt //指定空格和逗号都作为分隔符,打印第三个字段
oldboy
[root@www tmp]# awk -F '[ ,]' '{print $3" "$6 }' oldboy.txt  //逗号也算分隔符,所以第六个字段是is
oldboy is
[root@www tmp]# awk -F '[ ,]' '{print $3" "$NF }' oldboy.txt  //$NF是最后一列
oldboy 49000448

查看/etc/services有多少行
法1: # wc -l /etc/services    //wc 统计一个文件的-l行数,-m字符数和-c字节数
法2: # sed -n '$=' /etc/services    //=的用法,询匹配字符在文件的第几行
[root@www tmp]# sed -n '/iqobject/=' /etc/services     //sed -n '/abc/{=}' /etc/services 在/etc/services中查找abc所在行,列出行号
10773
10774
法3: [root@www tmp]# cat -n /etc/services |tail -1   //cat -n 显示所有行数
 10774    iqobject        48619/udp               # iqobject
法4: [root@www tmp]# awk '{print NR}' /etc/services| tail -1    //print NR,查看文件的行数
10774
法5:[root@www tmp]# grep -n $ /etc/services |tail -1    //-n 顺便显示行号
10774:iqobject        48619/udp               # iqobject


wc命令在生产模式中的应用:把查到进程或者树或者其他内容变成一个数字
[root@www tmp]# ps -ef|grep ssh|wc -l    //查看一个进程的连接数,超过1说明这个进程还活着
4

Q: 过滤出/etc/services 文件包含3306和1521两数字的行的内容
[root@www tmp]# grep -E "3306|1521" /etc/services    //grep -E 相当于egrep
mysql           3306/tcp                        # MySQL
mysql           3306/udp                        # MySQL
ncube-lm        1521/tcp                # nCube License Manager
ncube-lm        1521/udp                # nCube License Manager

[root@www tmp]# ls -lih /etc
total 1.8M
788358 drwxr-xr-x.  3      root root        4.0K Jun     1 00:38      abrt
795265 drwxr-xr-x.  4      root root        4.0K Jun     1 00:39      acpi
inode    权限       硬链接数 属主和所属组    文件或和大小    最近修改时间    文件或目录名

指令分割符--分号

    ◆ PHP和C,Perl和Java一样,语句分为两种:
        - 功能执行语句    (必加)    比如 echo
        - 代码结构语句    (不加)    比如 if;while
    ◆ php需要在每个指令后用分号结束. 和其他语言不一样的是,在PHP中右括号(?>)
    前的分号不是必选的;也就是说靠(?>) 最近的;可以不需要

    ◆ php代码注释方法:
       ●     //
       ●     #
       ●    多行注释 /*        */
       ●    文档注释/**        */
        文档注释可以用软件提取出来成为一个手册
    注释要写在代码的上面或者右面

    ◆ 空行的使用方法
        ● 使用两个空行
            - 一个源文件的两个代码段
            - 两个类的声明
        ● 在一下情况下使用一个空行
            - 两个函数声明之间
            - 函数内的布局变量和函数的第一条语句之间
            - 注释或者单行注释之前
            - 一个函数的两个逻辑代码段
-----------------------------------------------------------------------------------------------------------------------
PHP标签
<html>
    <head>
        <title>Title</title>
    </head>
    <body>
        这是直接输出的<br>
        <?php
            echo "下面是一句假话<br>";
            echo "Aphey is a good soccer player<br>";
            $string="Yes he is<br>"
        ?>
<!--        此短标签默认不可用,需要到php.ini 里打开short_tag_open = on 才行,不建议使用,会和xml冲突-->
        <?=$string ?>
<!--        script 标签方法默认可用,比较长,不推荐记-->
        <script language="php">
            echo "of course he is.<br>";
        </script>
    </body>
</html>
<!--    如果全篇都是php代码,则最后可以不加闭合标签,而且推荐不加,因为有人习惯
-->
    <?php   echo "Hello World";
-----------------------------------------------------------------------------------------------------------------------
PHP变量的声明
     我们写的程序都是些在硬盘中,但是由于物理硬件的限制(硬盘的转数),电脑都是把程序存在内存中,有内存和CPU 交互.
     内存中有个区域叫 栈内存,它和CPU结合是最频繁的,声明变量时,就会往内存里存,存的这块内存有个名称-变量名;同是也在内存里
     有个地址;我们可以通过变量名来找到这个变量,不能通过地址来找(C语言可以,那叫指针)
<?php
//    就是把name变量放到内存的一个容器里,然后一旦改变这个容器里的内容,下面引用该容器的地方内容就都发生改变了,该容器就是变量
    $name = "Oliver Kahn <br>";
    echo $name;
    echo $name;
    echo $name;
    echo $name;
    echo $name;
    echo $name;
    echo $name;
    echo $name;
    echo $name;
-----------------------------------------------------------------------------------------------------------------------
变量的声明和命名
    php里面变量都是以 $符号开头的,
    <?php
        /*
        * 1.变量名字以 $ 开始
        * 2.没有意义的变量名尽量避免
        * 3.变量名不能以数字开头
        * 4.变量中不能有运算符号
        * 5.别的语言不能用系统关键字命名,php可以,因为前面有$符号区分了.
        * 6.变量名称区分大小写(驼峰式命名:多个单词组成,第一个单词小写,后面每个单词首字母大写)
        */
        $name = "Oliver Kahn";
        $position = "Goal Keeper";
        $age = 38;
        $int = 10;
        $INT = 20;
        echo $name;"<br>"
        echo $position;"<br>"
        echo $age;"<br>"
        echo $int;"<br>"
        echo $INT;
        $a = $b = $c = $d = 10;
        echo $a;
        echo "<br>";
        echo $b;
        echo "<br>";
        echo $c;
        echo "<br>";
        echo $d;
        echo "<br>";

        var_dump(10);//可以打印一个值或者变量,输出他的类型和内容.
        var_dump($c);//可以打印$c的值,输出他的类型和内容.
        isset();//判断一个变量是否存在,如isset($a);
        $bool = isset($a);    //判断$a是否存在,并把结果赋给变量$bool
        var_dump($bool);    //打印出$bool的值,并查看它的类型


        unset();    //删除一个变量
        unset($c);    //释放变量$c

        empty();    //判断内容是否为空,内容为空则返回真;
        var_dump(empty($c));    //判断 $c 是否为空,注意 0和 null 都为空
-----------------------------------------------------------------------------------------------------------------------
php可变变量
    可变变量必须是两个$$连在一起.不可以在$$之间参杂其他东西
-----------------------------------------------------------------------------------------------------------------------
3.4.4 php引用变量1
//把 a在内存中的位置赋给e,就相当于$e是$a的别名,改变哪个,另一个也会跟着变,但是以最后一个为准
    $e = &$a;
    $a = 20;
    $e = 50;
    echo $a,"<br>"; //显示的会是50,因为$e是后赋值的,会以后面一个为准
    echo $e,"<br>";
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------
HTML相关学习  
  Html文件的基本结构

        <html>
            <head>
                <title>这是一个标题</title>
            </head>
            <body>
            Hello World!
            </body>
        </html>

            
    Html 运行方式
            1) 本地运行
               就是用浏览器直接打开本地的源文件    

            2) 远程访问
               协议:通俗来讲就是 计算机互相通讯(网络规则)
               远程访问就是通过服务器访问

    后缀HTML和HTM的区别
    1) 如果一个网站有index.html和index.htm,默认情况下有限访问html
    2) htm后缀是为了兼容以前dos系统的8.3命名规则,即 八个字符.三个字符

    注意字体的size可以取1-7,想要更大就要用css了,如 style="font-size:170px;"

    HTML符号实体(参考高洛峰php)
    图像表格的实际应用
    <img src="图片的路径/也可以是一个url" width="宽度" height="高度" border="边框" alt="鼠标移动到图片上的提示文字" />
   
    当浏览器打开一个网页(网页源码如下),问浏览器一共发起了几次请求     
   <html>
    <head>
        <title>这是一个标题</title>
    </head>
    <body>
    <img src="dog.jpg" />
    <img src="www.baidu.com.jpg" />
     </body>
     </html>
    一共发起了3次,第一次:获取整个网页代码; 第二次 请求dog.jpg; 第三次: www.baidu.com.jpg

    html表格
    * 在以前对网页布局要求不高的情况下, 经常有人使用table布局(即使用表格来显示数据,同时用于布局)
      现在用div+css来布局了 
 <table align=center bgcolor=yellow border=3px width=400px height=200px >
 <!--宽度可以是像素,也可以是百分比,百分比表示占整个页面宽度的百分比-->
应用案例:
1) 确定行数
2) 表格里面还可以继续放入表格
<table border="1" width="400px">
        <tr>
            <!--colspan 表示该列要占据n列-->
            <td colspan="3" align ="center">菜谱</td>
        </tr>
        <tr>
            <td rowspan="2" align="center">素菜</td>
            <td>5</td>
            <td>6</td>
        </tr>

        <tr>
            <td>8</td>
            <td>9</td>
        </tr>

        <tr>
            <!--rowspan表示要合并行数-->
            <td rowspan="2" align="center">荤菜</td>
            <td>11</td>
            <td>12</td>
        </tr>

        <tr>
            <td>14</td>
            <td>15</td>
        </tr>
    </table>

    ◆ 无序列表和有序列表
 <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
    <head>
        <title>有序列表和无序列表</title>

    </head>
    <body>
        <ul type="disc">
        <!--type 类型有 disc=● circle=○ square=■-->
            <li>风暴英雄</li>
            <li>魔兽世界</li>
            <li>炉石传说</li>
            <li>暗黑破坏神</li>
            <li>守望先锋</li>
            <li>魔兽争霸</li>
        </ul>
        <ul>
            <li>coffee</li>
            <li>tea
                <ul>
                <li >black tea</li>
                <li>green tea
                    <ul>
                    <li>Chinese green tea</li>
                    <li>British green tea</li>
                    </ul>
                </li>
                </ul>
            </li>
            <li>milk</li>
        </ul>
        <!--有序列表 
        type类型:
            1: 阿拉伯数字
            a: 小写字母
            A: 大写字母
            i: 小写罗马数字
            I: 大写罗马数字
        start是设定开始数目
         -->
        <ol type="i" start="4">
            <li>宋江</li>
            <li>卢俊义</li>
            <li>吴用</li>
        </ol>
    </body>
</html>
Html 常用标记/元素-frameset(框架集)
    用于分割显示多个页面
    如果a.html包括了其他页面(frameset) 则要求a.html本身不能有body和body的内容
假如一个框架有可见边框，用户可以拖动边框来改变它的大小。为了避免这种情况发生，可以在 
    <frame> 标签中加入：noresize="noresize".
    重要提示：不能将 <body></body> 标签与 <frameset></frameset> 标签同时使用！不过，假如    你添加包含一段文本的 <noframes> 标签，就必须将这段文字嵌套于 <body></body> 标签内。            （在下面的第一个实例中，可以查看它是如何实现的。）

    可以用百分比,也可以指定像素; 

noresize表示不能拖动改变子页面的尺寸,frameborder是定义子页面的边框,0/1分别表示无/有 边框
target 表示我们点击后目标指向哪个部分
html 常用标记/元素--iframe(浮动窗口)
iframe的使用
Q: 有时候我们需要在一个含有<body>的页面中嵌入另外一个页面,形成画中画的效果,怎么处理?
A: iframe元素(浮动窗口)  
Html文档头部标记
<head>头部标记</head> 头部标签里可以放入四种标签
◆ <title>标题内容</title> 只能有一个,定义网页的标题,显示在浏览器的标题栏上
      一般都是 公司名称+公司产品,有利于搜索引擎(也是在搜索引擎中显示的标题).

   ◆ <base href="http://www/lamppbrother.net" />   只能有一个, 基底网址标记
      用于设定浏览器中文件的绝对路径的.如果写了这个标签,那么网页中的文件只需要写下相对路径即可.
   ◆ <link rel="stylesheet" type="text/css" href="test.css">  可以有多个,设置外部文件的链接标记,用于确定本页面和其他文档之间的关系,常用的就是外部样式表的定位,浏览器会分析它的内容,自动读取加载相应的文件
◆ <meta>       可以有多个
      ◇ <meta name="Keywords" content="关键字1,关键字2,apache,php,linux">
        <meta name="Description" content="描述的内容">
        <meta name="Robots" content="index">
指定name属性的,用于在网页中加入一些关于网页的描述信息,如 网页的关键字,网页描述信息等
name 不是自己顶一顶额值,有固定的值:
         · Keywords:    网页的关键字
· Description: 网页的描述
· Robots:  值: index,noindex,follow,nofollow,all,none搜索引擎蜘蛛定期爬一遍整个页面,并将内容收录到数据库里,index表示允许放到搜索引擎缓存数据库,noindex表示不允许,follow表示允许通过我的网页去爬别人的网站,all 表示 index+follow
         · Author: 作者
· copyright: 版权
      ◇ <meta http-equiv="Content-type" content="text/html;charset=utf-8">
        <meta http-equiv="refresh" content="3;url=你想要刷新到的网页">
        <meta http-equiv="Expires" content="0">
        <meta http-equiv="windows-Tartget" content="_top">
        <meta http-equiv="Expires" content="0">
        <meta http-equiv="Page-Enter" content="revealTrans(transaction=0-23,duration=1.000)">
      http-equiv(equiment viewing)属性用于在html文档中模拟http协议的响应消息头,如告诉浏览器是否缓存页面,使用什么样的字符集显示网页内容,多长时间刷新页面.
         · Content-type 指定网页类型和字符集
· Refresh  指定网页刷新时间,默认单位为秒,最好不要小于5s
         · Expires  缓存到什么时间,0表示不缓存
· Windows-Tartget 后面分帧会讲
· pragma
         · page-enter和 page-exit,设置页面载入和退出特效.
   ◆ <style>
   ◆ </script>

表单元素
Q: 为什么需要表单?
A: 我们经常需要把一些数据交给服务器处理,比如注册用户,发帖...,这样就需要使用到表单元素.
  
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>

</head>
<body>
   <img src="map.png" alt="this is a map" usemap="#map" />
<!--映射区域
      值  描述
      x1,y1,x2,y2    如果 shape 属性设置为 "rect"，则该值规定矩形左上角和右下角的坐标。
      x,y,radius 如果 shape 属性设置为 "circ"，则该值规定圆心的坐标和半径。
      x1,y1,x2,y2,..,xn,yn   如果 shape 属性设置为 "poly"，则该值规定多边形各边的坐标。如果第一个坐标和最后一个坐标不一致，那么为了关闭多边形，浏览器必须添加最后一对坐标。

-->
<map name="rect">
      <area shape="rect" coords="左上角x,左上角y,右下角x,右下角y" href="跳转页面.htm" target="_blank" alt="方形热区" />
      <area shape="circle" coords="0,0,10,10" href="example.htm" target="_blank" alt="" />

   </map>
</body>
</html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
   <title>线包字fieldset</title>
</head>
<body>
   <fieldset style="width:500px">
      <legend style="color:blue">♥ 审核状态</legend>
      <form>
         <input type="radio" name="state" value="checked" />已审核
<input type="radio" name="state" value="unchecked" />未审核
<input type="radio" name="state" value="all" checked />未审核
</form>
   </fieldset>
</body>
</html>
div+css 简介
传统table布局缺点多于优点

缺点:
1. 显示样式和数据是绑定在一起的
2. 布局的时候,灵活度不高
3. 一个页面可能会有大量的<table> 元素,代码会有冗余
4. 增加带宽
5. 搜索引擎不喜欢这样的布局

优点:
1. 理解比较简单
2. 不同的浏览器看到的效果一般是相同的
3. 显示数据很好

于是产生了div+css
基本思想: 数据和样式要分离
div: division 区段
div 用来存放需要显示的数据(文字,图标...), css就是用来制定怎样显示,从而做到数据和显示相互分离

css:
属性之间用分号隔开,属性和值之间用: 链接 如  width:500px

div+css的优势:
● 符合w3c标准,微软等公司均为w3c支持者
● 搜索引擎更加友好
● 样式的调整更加方便.内容和样式的分离,使页面和样式的调整变得更加方便.
● css的极大优势表现在简介的代码.
● 表现和结构分离,在团队开发中更容易分工合作而减少相互关联性.
span元素通常用于存放小块元素,行内元素
css部分可以单写一个文件,然后引入,也可以直接嵌入到该html文件
css 使用的基本语法
    选择器{
    属性1:属性值;
    属性2:属性值;
    }
css 滤镜
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
    <title>初识css</title>
    <!--可引入多个 css-->
    <link rel="stylesheet" href="demo1.css" type="text/css" media=""/>

    <!--css部分可以单写一个文件,然后引入,也可以直接嵌入到该html文件,下面的就是内联-->
    <style type="text/css">
        a:link img{
            /*滤镜*/
            filter:gray;
        }
        a:hover image{
            filter:"";
        }
    </style>
</head>
<!--下面图片用内联css-->
<a href="#"> <img src="aphey.png" width="400px" height="400px" alt="Aphey Icon" /></a>
</body>
</html>
span元素通常用于存放小块元素,行内元素
css部分可以单写一个文件,然后引入,也可以直接嵌入到该html文件
css 使用的基本语法
    选择器{
    属性1:属性值;
    属性2:属性值;
    }
css 滤镜
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
    <title>初识css</title>
    <!--可引入多个 css-->
    <link rel="stylesheet" href="demo1.css" type="text/css" media=""/>

    <!--css部分可以单写一个文件,然后引入,也可以直接嵌入到该html文件,下面的就是内联-->
    <style type="text/css">
        a:link img{
            /*滤镜*/
            filter:gray;
        }
        a:hover image{
            filter:"";
        }
    </style>
</head>
<!--下面图片用内联css-->
<a href="#"> <img src="aphey.png" width="400px" height="400px" alt="Aphey Icon" /></a>
</body>
</html>

选择器:
    选择器是css中非常重要的概念. css中有常规的有四种不同的选择器
    1) 类选择器,又叫class选择器
    2) id选择器
    3) html元素选择器
    4) 通配符选择器
    简单来说,选择器就是在css中创建,而在网页页面(html,jsp,pgp,asp.net)中使用

    1) 类选择器语法
        .类选择器名{
        属性名:属性值;
        属性名:属性值;
        ...
        }
    2) ID选择器语法
        #id选择器名{
        属性名:属性值;
        属性名:属性值;
        ...
        }
    3) html元素选择器语法
        html元素名称{
        属性名:属性值;
        属性名:属性值;
        ...
        }
    4) 通配符选择器:如果希望所有元素都符合某一种样式,可以使用通配符选择器.优先级是最低的
        *{
        属性名:属性值;
        }
4种优先级排列:
id选择器 > class选择器 > html元素选择器 > 通配符选择器

父子选择器(组合)
1) 父子选择器可以有多级,但是在实际开发中,不建议太多.建议不要超过3层.
2) 父子选择器有严格的层级关系
3) 父子选择器不局限于什么类型选择器
比如
#id span span
.s1 #id span
div #id .s2
选择器深入探讨
● 一个元素可以同时有id选择器和类选择器
    案例:新闻1;
● 一个元素最多有一个id选择器,但是可以有多个类选择器
    案例:新闻3;多个类选择器有冲突的话,在CSS文件中谁写在下面谁的优先级就高;
● 在CSS文件中,如果有多个类/id选择器它们都有相同的部分,我们可以把相同的css样式单独抽取写一份,可以减少css文件的冗余.
    方法:把几个选择器用','并列隔开:
    选择器1,选择器2,选择器3{
    共同属性:属性值;
    共同属性:属性值;
    共同属性:属性值;
    ...
    }
行内元素它只占能显示自己内容的宽度,而且它不会占据整行;
而块元素,不管自己的内容有多少,会占据整行,且会换行显示
    ◆ 常见的行内元素:<a><span><input>
    ◆ 常见的块元素:<div><p>
行内元素和块元素可以通过CSS中的 DISPLAY 属性互换
    display:inline        以内联方式显示
    display:block        以块方式显示
CSS之间可以互相引用:
@import url("被引用的css文件")
在内部直接引用
<style>
@import url("某个css文件")
</style>

标准流和非标准流:
流:html元素在网页中显示的顺序
标准流:在html文件中,写在前面的元素在前面显示,写在后面的html元素在后面显示
非标准六:在html文件中,档某个元素脱离的标准流,那么它就处于非标准流
具体些页面的顺序：
1. 先html，搞定页面内容
2. 写css文件，来控制页面样式
我们在网页设计中常用的<!doctype>有两种
Html transitional DTD
Xhtml transitional DTD
不同浏览器的兼容问题(关于网页问题,我们不用深入研究)
浮动
在div+css中,浮动分为左浮动/右浮动/清除浮动三种
所谓右浮动,指一个块元素向右移动,让出自己本身的位置给别人用,它一直向右移动,直到碰到包含自己的父元素的右边框.
所谓左浮动,就是指某个块元素尽量向左边移动,这样就让出了它右边的空间给别的块来显示.
如果我们的div框很多,外面的框无法容纳水平排列的div元素,那么其他浮动快乡下浮动,知道有足够的空间
一般情况下,上面有了float的,最好清浮动
<div style="clear:both"></div>
如果浮动元素的高度不同,那么当它们向下移动时可能被其它浮动元素"卡住",知道有足够的空间


换个角度理解浮动:
如果一个元素左/右浮动,则:
1) 它本身会尽可能向左/右移动,直到碰到边框或者别的浮动元素,特别强调浮动对块元素和行内元素都生效
(当行内元素也浮动的时候浏览器会默认把这些元素变成 display:block)!
2) 元素向右/左 浮动,就相当于让出自己的左/右边,别的元素就会在它的左/右边排列
清除浮动
    如果不希望别的元素在某个元素的左边或者右边,可以使用清除浮动的方法 clear:left/right/both
定位
常见的定位有4种:
    ◆ static 静态定位 (默认值)
    ◆ relative    相对定位 (相对自己原来的位置来定位,而且还保留原来的位置)
    ◆ absolute    绝对定位 (相对包含了该元素最近的那个脱离了标准流的父元素的位置来定位, 如果所有父元素都没有脱离标准流,则相对body定位)
    ◆ fixed    固定定位    永远根据视窗左上角来定位(飘浮窗口的做法!!!)

    PS: left, top值对static是不生效的!

    Z-index:用于设置对象(div)显示的时候,层叠顺序,可以理解为 z轴, 值越高越在上层
卸载完APACHE 要到服务里看有没有关闭掉
apache 用命令行来管理(进入apache安装目录后,再运行 控制台命令即可)
1. 进入到控制台: ctrl+R
apache 其实是软件,apache有一个非常重要的应用程序 httpd.exe, 该程序在apache安装目录的bin目录下
如果你希望在任何目录下都可以运行我们的httpd指令,则需要做一个环境变量设置
在path里面添加apache按住目录下的的\bin路径
2. 端口设置
apache这个web服务默认在80端口监听...
端口:web服务器运行的时候,如果他是一个网络,则规范该网络服务必须监听一个端口,apache默认端口为80.
端口知识扩展:
 1) port 一台机器可以有1-65535 号端口
 2) 在实际开发中,我们经常使用netstat -an 来查看当前机器有哪些端口在监听;如果发现有异常端口监听
 则可以关闭该端口; netstat -anb 可以发现是哪个程序在监听该端口,从而在进程里关闭该程序.
 3) 一台机器的80端口被 apache 监听,则该端口不能再被其他程序监听
 4) 端口分为有名端口1-1024,平时最好不要占用.
端口占用问题[查看端口:netstat和fport,修改端口]
可以修改或监听多个端口,如:使服务器在所有地址上同时接受来自端口80和8000的请求,可以这样写
Listen80
Listen8000
apache如何去配置端口
    1) apache软件的配置文件在httpd.conf中配置,该文件在apache安装目录下的conf中.
    2) 在httpd.conf中我们修改端口即可;修改完后要重新启动apache.

apache 用命令行来管理(进入apache安装目录后,再运行 控制台命令即可)
1. 进入到控制台: ctrl+R
apache 其实是软件,apache有一个非常重要的应用程序 httpd.exe, 该程序在apache安装目录的bin目录下
如果你希望在任何目录下都可以运行我们的httpd指令,则需要做一个环境变量设置
在path里面添加apache按住目录下的的\bin路径
2. 端口设置
apache这个web服务默认在80端口监听...
端口:web服务器运行的时候,如果他是一个网络,则规范该网络服务必须监听一个端口,apache默认端口为80.
端口知识扩展:
 1) port 一台机器可以有1-65535 号端口
 2) 在实际开发中,我们经常使用netstat -an 来查看当前机器有哪些端口在监听;如果发现有异常端口监听
 则可以关闭该端口; netstat -anb 可以发现是哪个程序在监听该端口,从而在进程里关闭该程序.
 3) 一台机器的80端口被 apache 监听,则该端口不能再被其他程序监听
 4) 端口分为有名端口1-1024,平时最好不要占用.
端口占用问题[查看端口:netstat和fport,修改端口]
可以修改或监听多个端口,如:使服务器在所有地址上同时接受来自端口80和8000的请求,可以这样写
Listen80
Listen8000
apache如何去配置端口
    1) apache软件的配置文件在httpd.conf中配置,该文件在apache安装目录下的conf中.
    2) 在httpd.conf中我们修改端口即可;修改完后要重新启动apache.
Apache 目录结构
    ./bin : 存放apache常用命令
    ./cgi-bin : 该目录存放linux/unix 常用命令
    ./conf : 用来存放配置文件
    ./error: 用来存放apache启动或者关闭时的错误记录
    ./extra-modules :
    ./htdocs : 存放我们站点的文件夹(默认情况);如果有多个站点,可以通过文件夹来分类
    ./icons : 存放图标
    ./include :
    ./lib :
    ./logs : 记录apache相关日志
    ./manual : 手册.
    ./modules : apache的模块
mpm: mutiple processing module 多重处理模块
APR:可移植运行库

虚拟目录
    提一个需求: 我的apache是安装在C盘,但是现在C盘满了,D盘有更多的空间. 现在问能不能把D盘的一个文件夹下的网页html,php当作网站管理
    配置方法如下:
    1) 配置虚拟目录在apache的conf目录下的httpd.conf的<ifModule dir_module>节点后添加如下代码:
<ifModule dir_module>
    DirectoryIndex index.html index.htm index.php     //相当于是欢迎页面,只要输入到上级目录即可,如 localhost/myblog/ 就可以看到localhost/myblog/index.html的内容
    Alias /myblog "D:/myblog"        //别名
    <Directory d:/myblog>        
    Order allow,deny    //这两行是访问权限设置
    Allow from all
    </Directory>
</ifModule>
    2) 注释原来的DocumentRoot路径
    #DocumentRoot "c:/wamp/www/"    //不注释的话,访问 localhost 就会继续以c:/wamp/www/为主目录;注释了以后会提示没有权限访问主目录

关于apache访问权限的讲解
    <Directory d:/myblog>        //对D:/myblog 文件权限设置
    Order allow,deny    //表示先许可所有的IP访问,deny表示拒绝所有;order表示顺序,先看allow,再看deny
    Allow from all        //表示允许所有都可以访问
注意还要注释掉 下面的 Require all denied
<Directory />
    AllowOverride none
#   Require all denied
</Directory>
Apache 创建虚拟主机
    

    1) 如需在apache服务器中创建WEB站点,需要启用 httpd.vhosts.conf文件添加
    <VirtualHost 127.0.0.1:80></VirtualHost>    //确保dns client是启动状态
     ● 配置的主机(网站)要想被外部访问,必须在DNS服务器或者windows系统中注册
     打开 httpd.conf中虚拟主机的注释
     # Virtual hosts
     Include conf/extra/httpd-vhosts.conf 
    
     2) 在httpd-vhosts.conf文件中最下面做配置 
</VirtualHost>
     <VirtualHost 127.0.0.1:80>       //想要局域网访问,就把127.0.0.1 换成本机ip
         DocumentRoot "d:/myblog"    //指定主目录
         DirectoryIndex index.html index.php index.htm    //配置欢迎首页面
         <Directory />        
         Options FollowSymLinks
         AllowOVerride None        //控制.htaccess里面配置项的开关, .htaccess一般放在主目录里
         Order allow,deny        //设置访问权限
         Allow from All
         </Directory>
 </VirtualHost>     
     

    3) 修改hosts 文件 --->127.0.0.1    www.baidu.com    //在浏览器访问 www.baidu.com 就访问127.0.0.1了
 
php 官方版本介绍

1) 安装httpd-2.2.19-win32-x86-no_ssl.exe
2) 下载php核心包(php核心包的安装就是解压即可)
3) 整合php和apache
在apache的conf目录下的httpd.conf加入如下代码:
   1. LoadModule php5_module C:/phpevn/php-5.3.5/php5apache2_2.dll    //整合apache2.2和php5
    PHPIniDir C:/phpevn/php-5.3.5        //用于指定php的ini文件,该文件是对php的一些配置
    AddType application/x-httpd-php .php .phtml

   2. 将 C:/phpevn/php-5.4.8/ 下的php.ini-development 改成php.ini;因为我们php的设置需要在php.ini里修改

   3. 在php.ini中可以制定对应的功能模块
        在php.ini中找到extension_dir = "C:\phpevn\php-5.3.5\ext"


4) 安装mysql数据库(只安装,不讲解)
    1. 安装软件
    2. 自定义安装,记的修改字符集为utf8    
    3. 在php.ini中打开一下几个注释掉的语句
        extension=php_bz2.dll
        extension=php_gd2.dll
        extension=php_mysql.dll
        extension=php_mysqli.dll



   4. 测试mysql是否可用
    1. 写一段php代码来测试:
    <?php
    $conn=mysql_connect("localhost","root","root");
    if($conn){
    echo "连接Mysql数据库ok";
    }else[
        echo"连接数据库失败";
    ]
    ?>
    2. 安装phpmyadmin来看看是否可用
    解压到htdocs/下即可访问 localhost/phpmyadmin/index.php 来访问即可.
在自己搭建的php开发/运行环境上安装一个discuz论坛                
    1. 准备一个discuz论坛代码(康盛新创)
    2. 将其解压到htdocs目录下
    3. 把upload目录下的所有文件截切到discuz目录里,并删除空的upload.
    4. 修改config.inc.php
        数据库用户名和密码改成自己数据库用户名和密码
        $dbuser = 'root';            // 数据库用户名
        $dbpw = 'root';                // 数据库密码
        $forumfounders = 'admin';    // 论坛创始人
    5. 在php的配置文件php.ini 里找到 short_open_tag = On
    6. 访问http://127.0.0.1/discuz/install.php
    7. 安装完成后,可以用http://127.0.0.1/discuz/index.php 正常访问
            
一个ip 绑定多个域名
    1) 通过端口来区分不同的虚拟主机(其实不好,因为端口只有管理员知道,达不到宣传的目的)
        第一个站点:
        - 还是按照绑定一个站点的方法做好准备
        - 启用虚拟主机
            1. 在 httpd.conf中打开 Include conf/extra/httpd-vhosts.conf前面的注释
            2. 配置虚拟主机的配置文件 httpd-vhosts.conf
            3. 在最下面改
        <VirtualHost 127.0.0.1:80>       //想要局域网访问,就把127.0.0.1 换成本机ip,不同站点用不同的端口
         DocumentRoot "d:/myblog"    //指定主目录
         DirectoryIndex index.html index.php index.htm    //配置欢迎首页面
         <Directory>        
         Options FollowSymLinks
         AllowOVerride None        //控制.htaccess里面配置项的开关
         Order allow,deny        //设置访问权限
         Allow from All
         </Directory>
         </VirtualHost>  
         第二个站点:
             现在 httpd.conf 里先添加一个监听端口: Listen 81;
             在httpd-vhosts.con里最下面添加下面的配置项:        
        <VirtualHost 127.0.0.1:81>       //想要局域网访问,就把127.0.0.1 换成本机ip,不同站点用不同的端口
         DocumentRoot "d:/myblog1"    //指定主目录
         DirectoryIndex index.html index.php index.htm    //配置欢迎首页面
         <Directory>        
         Options FollowSymLinks
         AllowOVerride None        //控制.htaccess里面配置项的开关
         Order allow,deny        //设置访问权限
         Allow from All
         </Directory>
         </VirtualHost> 
        
    2) 通过ServerName来配置(1个虚拟主机对应一个 站点)
      第一个站点:
    <VirtualHost *:80>
    ServerAdmin webmaster@sina.com    //管理员邮箱
    DocumentRoot "/share/sina"       //网站主目录
    ServerName www.sina.com        //服务器名称,要写成完整域名,主要是这个
    #   ServerAlias www.dummy-host.example.com    //没有别名,注销掉
    ErrorLog "logs/sina-error_log"     //错误日志,只要和sina区分开即可
    CustomLog "logs/sina-access_log" common      //访问日志,同样和sina区分开即可
    </VirtualHost>
      第二个站点:
    <VirtualHost *:80>
    ServerAdmin webmaster@sohu.com    //管理员邮箱
    DocumentRoot "/share/sohu"       //网站主目录
    ServerName www.sohu.com        //服务器名称,要写成完整域名,主要是这个
    #   ServerAlias www.dummy-host.example.com    //没有别名,注销掉
    ErrorLog "logs/sohu-error_log"     //错误日志,只要和sina区分开即可
    CustomLog "logs/sohu-access_log" common      //访问日志,同样和sina区分开即可
    </VirtualHost>
    
    PS: 2)的配法是一个IP 一个端口对应多个站点,如果访问服务器的IP访问的将是 虚拟主机配置文件里从上往下第一个虚拟主机!!!
php基本语法介绍
   <?php?> php代码只会在服务器端执行,然后结果再反馈给浏览器.
php的基本语法介绍
    1. PHP可以和html代码混合使用,但是一定要使用<?php ?>包起来
    2. php还可以用<script language="php">php代码</script>    //不推荐
    3. 如果只是为了显示一个变量的值<?=变量?>
    4. php 的3种注释方式
        ◆ /*C风格 多行注释*/
        ◆ // C风格单行注释
        ◆ # Unix风格单行注释

PHP的基本语法:
    1. html和php混编
    2. 一个语句以;(分号结束)
    3. 如何定义一个变量,和变量的使用
    4. 变量的数据类型不是固定不变的
    5. php是弱数据类型编程语言
    6. php区分大小写
    7. 一个有效的变量名由字母或者下划线开头,后面跟上任意数量的字母,数字,或者下划线 

案例:
    <?php
        $a;
        echo $a;    //如果我只写了$a, 但是我们没赋值,究竟$a是什么值?,显示结果为 NULL
        var_dump($a);    //用 var_dump来判断变量类型
        echo $a;    //显示一个 notice错误,其实不算是致命错误,因为下面一句话 还能执行
        echo "hello,world";


整型细节讨论
    1. 整数型可以使用十进制,十六进制0x打头或 八进制 0 打头表示
        $a = 1234;    //十进制
        $a = -123;    //负数
        $a = 0123;    //八进制(等于十进制的83 算法:3*80+2*81+1*82)
        $a = 0x1A;    //十六进制(等于十进制的26, 十六进制是0-F, A=10 算法 A*160+1*161=10+16=26)
       
        <?php
            $a=0123;
            echo "a=" .$a    //.表示拼接,把两个字符串串起来

        
    2. php的整数都是有符号数.
       一个数总是要占用一定内存空间,空间是按字节来分的,在php中一个整数 一般占用4个字节(与平台有关,一个字节=8bit).
        1Byte=8bit,通过下图我们可以看出,php的整数的二进制最高位表示符号位,0表示正数,1表示负数.
        
    3. 整型的字长和平台有关,通常是(4个字节有符号数).integer值的字长可以用常量echo PHP_INT_SIZE; 来表示,最大值可以用常量PHP_INT_MAX来表示.举例
    echo PHP_INT_SIZE;     //查看php字长
    echo PHP_INT_MAX        //查看php最大整数值
为什么 PHP_INT_MAX是 2147483647? //231-1,二进制算法
    4. 如果给定的一个数超出了integer的范围,将会被解释为 float.
    $large_number = 2147483647;     
    var_dump($large_number);        //int类型
    $large_number = 2147483648
    var_dump($large_number);         //float 类型
    
问题:
    $a=2;问在内存中 2是怎么样存在的?
    00000000 00000000 00000000 00000010 → 0*20+1*21
 
bool类型的细节
    1.简单说bool类型就两个值: true & false;且不区分大小写;
    2.以下值都会被当做FALSE对待
        a) 布尔值false自身
        b) 整数0值
        c) 浮点型0.0
        d) 空字符串,以及字符串"0"
        e) 不包括任何元素的数组
        f) 不包括任何成员变量的对象(仅PHP4.0适用)
        g) 特殊类型NULL(包括尚未设定的变量)
Example:   
<?php
$a = 0;    
//如果我们把$a当做一个布尔类型使用,则为false
if($a==false){
    echo '假的1';
}

echo '<br>';

$b=0.0;
if($b==false){
    echo '假的2';
}

echo '<br>';

$c="";
if($c==false){
    echo '假的3';
}

echo '<br>';

$d=null;
if($d==false){
    echo '假的4';
}


浮点型细节

1.浮点数(也叫双精度数或实数)
2.浮点数的字长和平台相关,通常最大值为 1.8e308,并具有14位十进制数字的进度(这个限制很重要)
    小数的精度如何起算:从左边开始第一个非0的数开始计算:
比如0.23456789022222988;0.0023456789022222488
<?php
$a = 0.23456789022222988;    
echo $a.'<br>';    //0.23456789022223
$b = 0.23456789022222488;    
echo $b.'<br>';    //0.23456789022222
$c = 0.000023456789022222488;    
echo $c;    //2.3456789022222E-5  E-5=*10-5


字符串细节
1.一个字符串就是有一系列的字符组成,因此,一个字符就是占用一个字节.
2.PHP对字符串长度的限制只和运行PHP程序的该台计算机的内存大小有关,即PHP字符串可以足够大
3. 字符串常见的定义方法:
单引号    //$a='abc,爱白菜';
双引号    //$b="Hello,World";
4.如果字符串是包围在双引号中,PHP将对一些特殊的字符进行解析:
案例1:
$i=90;
$a = "Hello$i";
$b = 'hello$i';
echo '<br>a=' .$a;    //会解析$i 结果为hello90
echo '<br>b=' .$b;    //会原封不动输出 hello$i
案例2:
$v="abcd\'";    
$v2='abcd\'';
echo '<br>' .$v;    //输出结果abcd\'
echo '<br>' .$v2;    //输出结果abcd'

PHP的表达式:
所谓表达式,就是任何有值的东西
$a=90+89;     //90+89是个加法表达式
算术运算符
php中常用的有:
1) + 加
2) - 减
3) * 乘
4) / 除
5) % 取模 其实%运算可以得到两个数相除的余数    

案例:
请编写一个php程序判断两个数是否能够整除.
<?php
$a=90;
$b=7;
if($a%$b==0){
    echo '能整除';
}else{
    echo '不能整除';
}









